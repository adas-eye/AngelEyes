<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.angeleyes.dao.ArticleDao">
    <!--目的:为dao接口方法提供sql语句配置
    即针对dao接口中的方法编写我们的sql语句-->

    <select id="queryById" resultType="Article" parameterType="long">
        select *
        from article
        where article_id = #{articleId}
    </select>

    <delete id="deleteArticle" parameterType="long">
        delete
        from article
        where article_id = #{articleId}
    </delete>

    <delete id="deleteArticleBatch">
        DELETE
        FROM article
        WHERE article_id IN
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{articleIds}
        </foreach>
    </delete>

    <insert id="insertOneArticle">
        INSERT
        INTO article(article_title,article_authorID,article_content,article_module_id, article_create_time, article_type)
        VALUES (#{article_title},#{article_authorID},#{article_content},#{article_module_id}, #{article_time}, #{article_type})
    </insert>

    <select id="getArticleById" resultType="Article">
        SELECT *
        FROM article
        WHERE article_id = #{article_id}
    </select>

    <select id="getArticleByAuthorID" resultType="Article" parameterType="Long">
        SELECT *
        FROM article
        WHERE article_authorID = #{authorID}
    </select>

    <select id="getAllArticle" resultType="Article">
        SELECT *
        FROM article
    </select>

    <!--<select id="getArticleByTime" resultType="Article" parameterType="Timestamp">-->
        <!--SELECT *-->
        <!--FROM article-->
        <!--WHERE article_create_time IN #{startTime} BETWEEN #{endTime}-->
    <!--</select>-->

    <select id="getArticleCount" resultType="Integer">
        SELECT count(article_id)
        FROM article
    </select>

    <select id="getArticlesHot" resultType="Article">
        SELECT *
        FROM article
        WHERE article_is_hot = 1 and article_module_id = #{article_module_id}
    </select>

    <select id="getArticlesTop" resultType="Article">
        SELECT *
        FROM article
        WHERE article_is_top = 1 and article_module_id = #{article_module_id}
    </select>

    <select id="getArticlesGood" resultType="Article">
        SELECT *
        FROM article
        WHERE article_is_good = 1 and article_module_id = #{article_module_id}
    </select>

    <select id="getArticlesCommon" resultType="Article">
        SELECT *
        FROM article
        WHERE article_is_good = 0 and article_is_hot=0 and article_is_top=0  and article_module_id = #{article_module_id}
    </select>

    <update id="setArticleHot" parameterType="Long">
        UPDATE article
        SET article_is_hot = 1
        WHERE article_id = #{article_id}
    </update>

    <update id="setArticleTop" parameterType="Long">
        UPDATE article
        SET article_is_top = 1
        WHERE article_id = #{article_id}
    </update>

    <update id="setArticleGood" parameterType="Long">
        UPDATE article
        SET article_is_good = 1
        WHERE article_id = #{article_id}
    </update>

    <update id="cancelArticleGood" parameterType="Long">
        UPDATE article
        SET article_is_good = 0
        WHERE article_id = #{article_id}
    </update>

    <update id="cancelArticleHot" parameterType="Long">
        UPDATE article
        SET article_is_hot = 0
        WHERE article_id = #{article_id}
    </update>

    <update id="cancelArticleTop" parameterType="Long">
        UPDATE article
        SET article_is_top = 0
        WHERE article_id = #{article_id}
    </update>

    <select id="getCountsInfo" resultType="Counts">
        select count(article_id) as articleCounts,
        sum(article_comment_number) as replyCounts,
        sum(article_read_number) as readCounts
        from article
    </select>

    <select id="articleCounts" resultType="Integer">
        SELECT COUNT(article_id)
        FROM article
    </select>
    <select id="queryByModuleId" resultType="Article">
        select *
        from article
        where article_module_id = #{moduleId}
    </select>

    <select id="queryByReplyNumbers" resultType="Article">
        select *
        from article
        where article_comment_number > #{number}
    </select>

    <select id="queryAll" resultType="Article">
        select *
        from article
        ORDER BY article_create_time DESC
        LIMIT #{offset},#{countLimit}
    </select>

    <select id="queryByNeeds" resultType="Article">
        select *
        FROM article
        WHERE article_create_time BETWEEN #{startTime} AND #{endTime}
        <if test="requirement == 0">
            <!--普通帖子-->
            AND article_is_top = 0 and article_is_hot = 0 AND article_is_top = 0
        </if>
        <if test="requirement == 1">
            <!--加精帖子-->
            AND article_is_good = 1
        </if>
        <if test="requirement == 2">
            <!--火帖子-->
            AND article_is_hot = 1
        </if>
        <if test="requirement == 3">
            <!--置顶帖子-->
            AND article_is_top = 1
        </if>
        AND article.article_title like concat(concat('%',#{titleKey}),'%')
    </select>

    <select id="queryArticleAuthorInfo" resultType="User" parameterType="Long">
        SELECT user_name
        from user
        where user_id = #{articleAuthorId}
    </select>

    <select id="queryArticleModuleName" resultType="String">
        select module_name
        from module
        where module_id = #{moduleID}
    </select>
    <update id="updateArticle" >
        update
        article
        SET article_title = #{articleTitle},
#         article_type_id = #{article_type_id},
        article_module_id = #{article_forum_id}
    </update>

    <update id="updateArticleClickCounts">
        update article
        set article_read_number = article_read_number +1
        WHERE  article_id = #{articleId}
    </update>

    <update id="articleCollet">
        <if test="type == 1">
            insert into article_collect(aid, uid, time, type)
             values(#{aid}, #{uid}, #{time}, 1);
            update article set article_collect_counts = article_collect_counts + 1 WHERE article_id = #{aid};
        </if>
        <if test="type == 2">
            insert into article_collect(aid, uid, time, type)
            values(#{aid}, #{uid}, #{time}, 2);
            update article set article_share_counts = article_share_counts + 1 WHERE article_id = #{aid};
        </if>
        <if test="type == 3">
            insert into article_collect(aid, uid, time, type)
            values(#{aid}, #{uid}, #{time}, 3);
            update article set article_good_counts = article_good_counts + 1 WHERE article_id = #{aid};
        </if>
        <if test="type == 4">
            insert into article_collect(aid, uid, time, type)
            values(#{aid}, #{uid}, #{time},4);
            update article set article_notgood_counts = article_notgood_counts + 1 WHERE article_id = #{aid};
        </if>
    </update>

    <select id="articleColletCheck" resultType="Article">
        <if test="type == 1">
            SELECT article.article_id
            from article_collect, article
            where article_collect.aid = article.article_id
            and article_collect.aid = #{aid}
            and article_collect.uid = #{uid}
            and article_collect.type = 1

        </if>
        <if test="type == 3">
            SELECT article.article_id
            from article_collect, article
            where article_collect.aid = article.article_id
            and article_collect.aid = #{aid}
            and article_collect.uid = #{uid}
            and article_collect.type = 3
        </if>
        <if test="type == 4">
            SELECT article.article_id
            from article_collect, article
            where article_collect.aid = article.article_id
            and article_collect.aid = #{aid}
            and article_collect.uid = #{uid}
            and article_collect.type = 4
        </if>
    </select>
</mapper>